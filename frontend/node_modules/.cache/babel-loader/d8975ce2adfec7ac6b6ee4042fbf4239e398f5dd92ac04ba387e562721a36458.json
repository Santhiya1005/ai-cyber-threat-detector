{"ast":null,"code":"require(\"dotenv\").config();\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst axios = require(\"axios\");\nconst mongoose = require(\"mongoose\");\nconst net = require(\"net\");\nconst path = require(\"path\");\nconst jwt = require(\"jsonwebtoken\");\nconst bcrypt = require(\"bcryptjs\");\nconst app = express();\napp.use(express.json());\napp.use(cors({\n  origin: \"*\"\n}));\n\n// -------------------- Env check --------------------\nconst requiredEnvs = [\"VT_API_KEY\", \"ABUSEIPDB_KEY\", \"MONGO_URL\", \"ACCESS_TOKEN_SECRET\", \"ACCESS_TOKEN_EXPIRE_MINUTES\", \"AI_URL\"];\nfor (const k of requiredEnvs) {\n  if (!process.env[k]) {\n    console.error(`‚ùå Missing required environment variable: ${k}`);\n    process.exit(1);\n  }\n}\n\n// -------------------- MongoDB --------------------\nmongoose.connect(process.env.MONGO_URL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => console.log(\"‚úÖ MongoDB connected\")).catch(err => {\n  console.error(\"‚ùå MongoDB error:\", err.message);\n  process.exit(1);\n});\n\n// -------------------- JWT Auth --------------------\nfunction authenticateToken(req, res, next) {\n  const authHeader = req.headers[\"authorization\"];\n  const token = authHeader && authHeader.split(\" \")[1];\n  if (!token) return res.status(401).json({\n    message: \"No token\"\n  });\n  jwt.verify(token, process.env.ACCESS_TOKEN_SECRET, (err, user) => {\n    if (err) return res.status(403).json({\n      message: \"Invalid token\"\n    });\n    req.user = user;\n    next();\n  });\n}\n\n// -------------------- Dummy user --------------------\nconst dummyUser = {\n  id: 1,\n  username: \"admin\",\n  password: bcrypt.hashSync(\"password123\", 10)\n};\napp.post(\"/api/login\", async (req, res) => {\n  const {\n    username,\n    password\n  } = req.body || {};\n  if (!username || !password) return res.status(400).json({\n    message: \"username & password required\"\n  });\n  if (username !== dummyUser.username) return res.status(400).json({\n    message: \"Invalid credentials\"\n  });\n  const validPass = await bcrypt.compare(password, dummyUser.password);\n  if (!validPass) return res.status(400).json({\n    message: \"Invalid credentials\"\n  });\n  const token = jwt.sign({\n    id: dummyUser.id,\n    username: dummyUser.username\n  }, process.env.ACCESS_TOKEN_SECRET, {\n    expiresIn: `${process.env.ACCESS_TOKEN_EXPIRE_MINUTES}m`\n  });\n  res.json({\n    token\n  });\n});\n\n// -------------------- Scan Schema --------------------\nconst scanSchema = new mongoose.Schema({\n  input: {\n    type: String,\n    required: true\n  },\n  status: String,\n  stats: Object,\n  total_engines: Number,\n  threatType: String,\n  aiPrediction: String,\n  detectedBy: [String],\n  date: {\n    type: Date,\n    default: Date.now\n  }\n});\nconst Scan = mongoose.model(\"Scan\", scanSchema);\n\n// -------------------- Local dataset --------------------\nlet maliciousData = [];\ntry {\n  maliciousData = require(path.join(__dirname, \"malicious.json\"));\n} catch {\n  console.warn(\"‚ö†Ô∏è malicious.json not found, local DB disabled\");\n}\n\n// -------------------- Helpers --------------------\nfunction isIP(input) {\n  return net.isIP(input) !== 0;\n}\nfunction isHash(input) {\n  return /^[a-fA-F0-9]{32,64}$/.test(input);\n}\nfunction isURL(input) {\n  return /^(https?:\\/\\/)?([a-z0-9-]+\\.)+[a-z]{2,}(\\/.*)?$/i.test(input);\n}\nfunction localThreatCheck(input) {\n  const val = input.trim().toLowerCase();\n  const found = maliciousData.find(item => String(item.value).toLowerCase() === val);\n  if (found) {\n    const type = found.type || \"unknown\";\n    return {\n      input,\n      status: \"üö® High Threat!\",\n      stats: {\n        malicious: 5\n      },\n      total_engines: 1,\n      threatType: type,\n      detectedBy: [\"LocalDB\"]\n    };\n  }\n  return {\n    input,\n    status: \"‚úÖ No Threat\",\n    stats: {\n      malicious: 0\n    },\n    total_engines: 0,\n    threatType: \"Safe\",\n    detectedBy: [\"LocalDB\"]\n  };\n}\n\n// -------------------- Third-party APIs --------------------\nconst VT_API = axios.create({\n  baseURL: \"https://www.virustotal.com/api/v3\",\n  timeout: 15000,\n  headers: {\n    \"x-apikey\": process.env.VT_API_KEY\n  }\n});\nconst ABUSE_API = axios.create({\n  baseURL: \"https://api.abuseipdb.com/api/v2\",\n  timeout: 10000,\n  headers: {\n    Key: process.env.ABUSEIPDB_KEY,\n    Accept: \"application/json\"\n  }\n});\nasync function checkIP(ip) {\n  try {\n    var _response$data, _response$data$data;\n    const response = await ABUSE_API.get(\"/check\", {\n      params: {\n        ipAddress: ip,\n        maxAgeInDays: 90\n      }\n    });\n    const score = Number(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.abuseConfidenceScore) || 0);\n    if (score >= 50) return {\n      status: \"üö® High Threat!\",\n      detectedBy: [\"AbuseIPDB\"],\n      threatType: \"High Risk IP\",\n      score\n    };\n    if (score > 0) return {\n      status: \"‚ö†Ô∏è Suspicious\",\n      detectedBy: [\"AbuseIPDB\"],\n      threatType: \"Suspicious IP\",\n      score\n    };\n    return {\n      status: \"‚úÖ No Threat\",\n      detectedBy: [\"AbuseIPDB\"],\n      threatType: \"Safe\",\n      score\n    };\n  } catch (err) {\n    console.warn(\"AbuseIPDB error:\", err.message || err);\n    return {\n      status: \"Unknown\",\n      detectedBy: [\"AbuseIPDB\"],\n      threatType: \"Unknown\"\n    };\n  }\n}\nasync function checkVirusTotalURL(inputUrl) {\n  try {\n    var _postRes$data, _postRes$data$data, _getRes$data, _getRes$data$data, _getRes$data$data$att;\n    const urlToPost = inputUrl.startsWith(\"http\") ? inputUrl : `http://${inputUrl}`;\n    const postRes = await VT_API.post(\"/urls\", `url=${encodeURIComponent(urlToPost)}`, {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n    const analysisId = postRes === null || postRes === void 0 ? void 0 : (_postRes$data = postRes.data) === null || _postRes$data === void 0 ? void 0 : (_postRes$data$data = _postRes$data.data) === null || _postRes$data$data === void 0 ? void 0 : _postRes$data$data.id;\n    if (!analysisId) return {\n      status: \"Unknown\",\n      detectedBy: [\"VirusTotal\"],\n      threatType: \"Unknown\"\n    };\n    const getRes = await VT_API.get(`/analyses/${analysisId}`);\n    const stats = (getRes === null || getRes === void 0 ? void 0 : (_getRes$data = getRes.data) === null || _getRes$data === void 0 ? void 0 : (_getRes$data$data = _getRes$data.data) === null || _getRes$data$data === void 0 ? void 0 : (_getRes$data$data$att = _getRes$data$data.attributes) === null || _getRes$data$data$att === void 0 ? void 0 : _getRes$data$data$att.stats) || {};\n    const malicious = stats.malicious || 0;\n    const suspicious = stats.suspicious || 0;\n    const total = Object.values(stats).reduce((a, b) => a + b, 0) || 0;\n    if (malicious > 0) return {\n      status: \"üö® High Threat!\",\n      detectedBy: [\"VirusTotal\"],\n      threatType: \"Malware\",\n      stats,\n      total_engines: total\n    };\n    if (suspicious > 0) return {\n      status: \"‚ö†Ô∏è Suspicious\",\n      detectedBy: [\"VirusTotal\"],\n      threatType: \"Phishing\",\n      stats,\n      total_engines: total\n    };\n    return {\n      status: \"‚úÖ No Threat\",\n      detectedBy: [\"VirusTotal\"],\n      threatType: \"Safe\",\n      stats,\n      total_engines: total\n    };\n  } catch (err) {\n    console.warn(\"VirusTotal URL error:\", err.message || err);\n    return {\n      status: \"Unknown\",\n      detectedBy: [\"VirusTotal\"],\n      threatType: \"Unknown\"\n    };\n  }\n}\nasync function checkVirusTotalHash(hash) {\n  try {\n    var _getRes$data2, _getRes$data2$data, _getRes$data2$data$at;\n    const getRes = await VT_API.get(`/files/${hash}`);\n    const stats = (getRes === null || getRes === void 0 ? void 0 : (_getRes$data2 = getRes.data) === null || _getRes$data2 === void 0 ? void 0 : (_getRes$data2$data = _getRes$data2.data) === null || _getRes$data2$data === void 0 ? void 0 : (_getRes$data2$data$at = _getRes$data2$data.attributes) === null || _getRes$data2$data$at === void 0 ? void 0 : _getRes$data2$data$at.last_analysis_stats) || {};\n    const malicious = stats.malicious || 0;\n    const suspicious = stats.suspicious || 0;\n    const total = Object.values(stats).reduce((a, b) => a + b, 0) || 0;\n    if (malicious > 0) return {\n      status: \"üö® High Threat!\",\n      detectedBy: [\"VirusTotal\"],\n      threatType: \"Malware\",\n      stats,\n      total_engines: total\n    };\n    if (suspicious > 0) return {\n      status: \"‚ö†Ô∏è Suspicious\",\n      detectedBy: [\"VirusTotal\"],\n      threatType: \"Suspicious\",\n      stats,\n      total_engines: total\n    };\n    return {\n      status: \"‚úÖ No Threat\",\n      detectedBy: [\"VirusTotal\"],\n      threatType: \"Safe\",\n      stats,\n      total_engines: total\n    };\n  } catch (err) {\n    console.warn(\"VirusTotal hash error:\", err.message || err);\n    return {\n      status: \"Unknown\",\n      detectedBy: [\"VirusTotal\"],\n      threatType: \"Unknown\"\n    };\n  }\n}\n\n// -------------------- AI --------------------\nasync function queryAI(input) {\n  try {\n    var _res$data;\n    const res = await axios.post(`${process.env.AI_URL.replace(/\\/+$/, \"\")}/predict`, {\n      input\n    }, {\n      timeout: 10000\n    });\n    return ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.prediction) || \"Unknown\";\n  } catch (err) {\n    console.warn(\"AI predict error:\", err.message || err);\n    return \"Unknown\";\n  }\n}\nasync function trainAI(input, label) {\n  try {\n    await axios.post(`${process.env.AI_URL.replace(/\\/+$/, \"\")}/train`, {\n      input,\n      label\n    }, {\n      timeout: 8000\n    }).catch(() => {});\n  } catch {}\n}\n\n// -------------------- Scan --------------------\napp.post(\"/api/scan\", authenticateToken, async (req, res) => {\n  const {\n    input\n  } = req.body || {};\n  if (!input || typeof input !== \"string\") return res.status(400).json({\n    message: \"No input\"\n  });\n  const trimmed = input.trim();\n  const local = localThreatCheck(trimmed);\n  let result = {\n    input: trimmed,\n    status: local.status,\n    stats: local.stats || null,\n    total_engines: local.total_engines || 0,\n    threatType: local.threatType,\n    detectedBy: Array.from(new Set(local.detectedBy || [])),\n    aiPrediction: null\n  };\n  try {\n    const aiPromise = queryAI(trimmed);\n    let thirdParty = {\n      status: \"Unknown\",\n      detectedBy: [],\n      threatType: \"Unknown\"\n    };\n    if (isIP(trimmed)) thirdParty = await checkIP(trimmed);else if (isURL(trimmed)) thirdParty = await checkVirusTotalURL(trimmed);else if (isHash(trimmed)) thirdParty = await checkVirusTotalHash(trimmed);\n    if (thirdParty.status !== \"Unknown\") {\n      result.status = thirdParty.status;\n      result.threatType = thirdParty.threatType;\n      result.stats = thirdParty.stats || result.stats;\n      result.total_engines = thirdParty.total_engines || result.total_engines;\n      result.detectedBy = Array.from(new Set([...result.detectedBy, ...thirdParty.detectedBy]));\n    }\n    const aiPred = await aiPromise;\n    result.aiPrediction = aiPred;\n    if (thirdParty.status === \"Unknown\" || isIP(trimmed) && thirdParty.score === 0) {\n      const lower = aiPred.toLowerCase();\n      if (lower.includes(\"malware\")) {\n        result.status = \"üö® High Threat!\";\n        result.threatType = \"Malware\";\n      } else if (lower.includes(\"phish\") || lower.includes(\"suspicious\")) {\n        result.status = \"‚ö†Ô∏è Suspicious\";\n        result.threatType = \"Phishing\";\n      } else if (lower.includes(\"benign\") || lower.includes(\"safe\")) {\n        result.status = \"‚úÖ No Threat\";\n        result.threatType = \"Safe\";\n      } else {\n        result.status = \"Unknown\";\n        result.threatType = \"Unknown\";\n      }\n      result.detectedBy.push(\"AI Model\");\n    } else {\n      if (!result.detectedBy.includes(\"AI Model\")) result.detectedBy.push(\"AI Model\");\n    }\n    result.detectedBy = Array.from(new Set(result.detectedBy)).sort();\n    if (result.threatType && result.threatType !== \"Safe\" && result.threatType !== \"Unknown\") {\n      trainAI(trimmed, result.threatType).catch(() => {});\n    }\n    const saved = await Scan.create(result);\n    res.json(saved);\n  } catch (err) {\n    console.error(\"Scan error:\", err.message || err);\n    try {\n      const fallback = await Scan.create({\n        ...result,\n        status: result.status || \"Unknown\"\n      });\n      return res.status(200).json(fallback);\n    } catch {\n      return res.status(500).json({\n        message: \"Internal server error\"\n      });\n    }\n  }\n});\n\n// -------------------- History --------------------\napp.get(\"/api/history\", authenticateToken, async (req, res) => {\n  try {\n    const history = await Scan.find({}).sort({\n      date: -1\n    }).limit(50);\n    res.json(history);\n  } catch {\n    res.status(500).json({\n      error: \"Internal server error\"\n    });\n  }\n});\napp.delete(\"/api/history/:id\", authenticateToken, async (req, res) => {\n  try {\n    await Scan.findByIdAndDelete(req.params.id);\n    res.json({\n      message: \"Deleted\"\n    });\n  } catch {\n    res.status(500).json({\n      error: \"Failed\"\n    });\n  }\n});\napp.delete(\"/api/history\", authenticateToken, async (req, res) => {\n  try {\n    await Scan.deleteMany({});\n    res.json({\n      message: \"Cleared\"\n    });\n  } catch {\n    res.status(500).json({\n      error: \"Failed\"\n    });\n  }\n});\n\n// -------------------- Start --------------------\nconst PORT = process.env.PORT || 4000;\napp.listen(PORT, () => console.log(`üöÄ Server running on port ${PORT}`));","map":{"version":3,"names":["require","config","express","cors","axios","mongoose","net","path","jwt","bcrypt","app","use","json","origin","requiredEnvs","k","process","env","console","error","exit","connect","MONGO_URL","useNewUrlParser","useUnifiedTopology","then","log","catch","err","message","authenticateToken","req","res","next","authHeader","headers","token","split","status","verify","ACCESS_TOKEN_SECRET","user","dummyUser","id","username","password","hashSync","post","body","validPass","compare","sign","expiresIn","ACCESS_TOKEN_EXPIRE_MINUTES","scanSchema","Schema","input","type","String","required","stats","Object","total_engines","Number","threatType","aiPrediction","detectedBy","date","Date","default","now","Scan","model","maliciousData","join","__dirname","warn","isIP","isHash","test","isURL","localThreatCheck","val","trim","toLowerCase","found","find","item","value","malicious","VT_API","create","baseURL","timeout","VT_API_KEY","ABUSE_API","Key","ABUSEIPDB_KEY","Accept","checkIP","ip","_response$data","_response$data$data","response","get","params","ipAddress","maxAgeInDays","score","data","abuseConfidenceScore","checkVirusTotalURL","inputUrl","_postRes$data","_postRes$data$data","_getRes$data","_getRes$data$data","_getRes$data$data$att","urlToPost","startsWith","postRes","encodeURIComponent","analysisId","getRes","attributes","suspicious","total","values","reduce","a","b","checkVirusTotalHash","hash","_getRes$data2","_getRes$data2$data","_getRes$data2$data$at","last_analysis_stats","queryAI","_res$data","AI_URL","replace","prediction","trainAI","label","trimmed","local","result","Array","from","Set","aiPromise","thirdParty","aiPred","lower","includes","push","sort","saved","fallback","history","limit","delete","findByIdAndDelete","deleteMany","PORT","listen"],"sources":["C:/Users/santhiya s/OneDrive/Desktop/MyProjects/cyber-threat-detector/frontend/src/App.js"],"sourcesContent":["require(\"dotenv\").config();\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst axios = require(\"axios\");\nconst mongoose = require(\"mongoose\");\nconst net = require(\"net\");\nconst path = require(\"path\");\nconst jwt = require(\"jsonwebtoken\");\nconst bcrypt = require(\"bcryptjs\");\n\nconst app = express();\napp.use(express.json());\napp.use(cors({ origin: \"*\" }));\n\n// -------------------- Env check --------------------\nconst requiredEnvs = [\n  \"VT_API_KEY\",\n  \"ABUSEIPDB_KEY\",\n  \"MONGO_URL\",\n  \"ACCESS_TOKEN_SECRET\",\n  \"ACCESS_TOKEN_EXPIRE_MINUTES\",\n  \"AI_URL\",\n];\nfor (const k of requiredEnvs) {\n  if (!process.env[k]) {\n    console.error(`‚ùå Missing required environment variable: ${k}`);\n    process.exit(1);\n  }\n}\n\n// -------------------- MongoDB --------------------\nmongoose\n  .connect(process.env.MONGO_URL, { useNewUrlParser: true, useUnifiedTopology: true })\n  .then(() => console.log(\"‚úÖ MongoDB connected\"))\n  .catch((err) => {\n    console.error(\"‚ùå MongoDB error:\", err.message);\n    process.exit(1);\n  });\n\n// -------------------- JWT Auth --------------------\nfunction authenticateToken(req, res, next) {\n  const authHeader = req.headers[\"authorization\"];\n  const token = authHeader && authHeader.split(\" \")[1];\n  if (!token) return res.status(401).json({ message: \"No token\" });\n  jwt.verify(token, process.env.ACCESS_TOKEN_SECRET, (err, user) => {\n    if (err) return res.status(403).json({ message: \"Invalid token\" });\n    req.user = user;\n    next();\n  });\n}\n\n// -------------------- Dummy user --------------------\nconst dummyUser = {\n  id: 1,\n  username: \"admin\",\n  password: bcrypt.hashSync(\"password123\", 10),\n};\n\napp.post(\"/api/login\", async (req, res) => {\n  const { username, password } = req.body || {};\n  if (!username || !password)\n    return res.status(400).json({ message: \"username & password required\" });\n  if (username !== dummyUser.username)\n    return res.status(400).json({ message: \"Invalid credentials\" });\n  const validPass = await bcrypt.compare(password, dummyUser.password);\n  if (!validPass) return res.status(400).json({ message: \"Invalid credentials\" });\n\n  const token = jwt.sign(\n    { id: dummyUser.id, username: dummyUser.username },\n    process.env.ACCESS_TOKEN_SECRET,\n    { expiresIn: `${process.env.ACCESS_TOKEN_EXPIRE_MINUTES}m` }\n  );\n  res.json({ token });\n});\n\n// -------------------- Scan Schema --------------------\nconst scanSchema = new mongoose.Schema({\n  input: { type: String, required: true },\n  status: String,\n  stats: Object,\n  total_engines: Number,\n  threatType: String,\n  aiPrediction: String,\n  detectedBy: [String],\n  date: { type: Date, default: Date.now },\n});\nconst Scan = mongoose.model(\"Scan\", scanSchema);\n\n// -------------------- Local dataset --------------------\nlet maliciousData = [];\ntry {\n  maliciousData = require(path.join(__dirname, \"malicious.json\"));\n} catch {\n  console.warn(\"‚ö†Ô∏è malicious.json not found, local DB disabled\");\n}\n\n// -------------------- Helpers --------------------\nfunction isIP(input) {\n  return net.isIP(input) !== 0;\n}\nfunction isHash(input) {\n  return /^[a-fA-F0-9]{32,64}$/.test(input);\n}\nfunction isURL(input) {\n  return /^(https?:\\/\\/)?([a-z0-9-]+\\.)+[a-z]{2,}(\\/.*)?$/i.test(input);\n}\nfunction localThreatCheck(input) {\n  const val = input.trim().toLowerCase();\n  const found = maliciousData.find((item) => String(item.value).toLowerCase() === val);\n  if (found) {\n    const type = found.type || \"unknown\";\n    return {\n      input,\n      status: \"üö® High Threat!\",\n      stats: { malicious: 5 },\n      total_engines: 1,\n      threatType: type,\n      detectedBy: [\"LocalDB\"],\n    };\n  }\n  return {\n    input,\n    status: \"‚úÖ No Threat\",\n    stats: { malicious: 0 },\n    total_engines: 0,\n    threatType: \"Safe\",\n    detectedBy: [\"LocalDB\"],\n  };\n}\n\n// -------------------- Third-party APIs --------------------\nconst VT_API = axios.create({\n  baseURL: \"https://www.virustotal.com/api/v3\",\n  timeout: 15000,\n  headers: { \"x-apikey\": process.env.VT_API_KEY },\n});\nconst ABUSE_API = axios.create({\n  baseURL: \"https://api.abuseipdb.com/api/v2\",\n  timeout: 10000,\n  headers: { Key: process.env.ABUSEIPDB_KEY, Accept: \"application/json\" },\n});\n\nasync function checkIP(ip) {\n  try {\n    const response = await ABUSE_API.get(\"/check\", {\n      params: { ipAddress: ip, maxAgeInDays: 90 },\n    });\n    const score = Number(response.data?.data?.abuseConfidenceScore || 0);\n    if (score >= 50)\n      return { status: \"üö® High Threat!\", detectedBy: [\"AbuseIPDB\"], threatType: \"High Risk IP\", score };\n    if (score > 0)\n      return { status: \"‚ö†Ô∏è Suspicious\", detectedBy: [\"AbuseIPDB\"], threatType: \"Suspicious IP\", score };\n    return { status: \"‚úÖ No Threat\", detectedBy: [\"AbuseIPDB\"], threatType: \"Safe\", score };\n  } catch (err) {\n    console.warn(\"AbuseIPDB error:\", err.message || err);\n    return { status: \"Unknown\", detectedBy: [\"AbuseIPDB\"], threatType: \"Unknown\" };\n  }\n}\n\nasync function checkVirusTotalURL(inputUrl) {\n  try {\n    const urlToPost = inputUrl.startsWith(\"http\") ? inputUrl : `http://${inputUrl}`;\n    const postRes = await VT_API.post(\"/urls\", `url=${encodeURIComponent(urlToPost)}`, {\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n    });\n    const analysisId = postRes?.data?.data?.id;\n    if (!analysisId) return { status: \"Unknown\", detectedBy: [\"VirusTotal\"], threatType: \"Unknown\" };\n\n    const getRes = await VT_API.get(`/analyses/${analysisId}`);\n    const stats = getRes?.data?.data?.attributes?.stats || {};\n    const malicious = stats.malicious || 0;\n    const suspicious = stats.suspicious || 0;\n    const total = Object.values(stats).reduce((a, b) => a + b, 0) || 0;\n\n    if (malicious > 0) return { status: \"üö® High Threat!\", detectedBy: [\"VirusTotal\"], threatType: \"Malware\", stats, total_engines: total };\n    if (suspicious > 0) return { status: \"‚ö†Ô∏è Suspicious\", detectedBy: [\"VirusTotal\"], threatType: \"Phishing\", stats, total_engines: total };\n    return { status: \"‚úÖ No Threat\", detectedBy: [\"VirusTotal\"], threatType: \"Safe\", stats, total_engines: total };\n  } catch (err) {\n    console.warn(\"VirusTotal URL error:\", err.message || err);\n    return { status: \"Unknown\", detectedBy: [\"VirusTotal\"], threatType: \"Unknown\" };\n  }\n}\n\nasync function checkVirusTotalHash(hash) {\n  try {\n    const getRes = await VT_API.get(`/files/${hash}`);\n    const stats = getRes?.data?.data?.attributes?.last_analysis_stats || {};\n    const malicious = stats.malicious || 0;\n    const suspicious = stats.suspicious || 0;\n    const total = Object.values(stats).reduce((a, b) => a + b, 0) || 0;\n\n    if (malicious > 0) return { status: \"üö® High Threat!\", detectedBy: [\"VirusTotal\"], threatType: \"Malware\", stats, total_engines: total };\n    if (suspicious > 0) return { status: \"‚ö†Ô∏è Suspicious\", detectedBy: [\"VirusTotal\"], threatType: \"Suspicious\", stats, total_engines: total };\n    return { status: \"‚úÖ No Threat\", detectedBy: [\"VirusTotal\"], threatType: \"Safe\", stats, total_engines: total };\n  } catch (err) {\n    console.warn(\"VirusTotal hash error:\", err.message || err);\n    return { status: \"Unknown\", detectedBy: [\"VirusTotal\"], threatType: \"Unknown\" };\n  }\n}\n\n// -------------------- AI --------------------\nasync function queryAI(input) {\n  try {\n    const res = await axios.post(`${process.env.AI_URL.replace(/\\/+$/, \"\")}/predict`, { input }, { timeout: 10000 });\n    return res.data?.prediction || \"Unknown\";\n  } catch (err) {\n    console.warn(\"AI predict error:\", err.message || err);\n    return \"Unknown\";\n  }\n}\n\nasync function trainAI(input, label) {\n  try {\n    await axios.post(`${process.env.AI_URL.replace(/\\/+$/, \"\")}/train`, { input, label }, { timeout: 8000 }).catch(() => {});\n  } catch {}\n}\n\n// -------------------- Scan --------------------\napp.post(\"/api/scan\", authenticateToken, async (req, res) => {\n  const { input } = req.body || {};\n  if (!input || typeof input !== \"string\") return res.status(400).json({ message: \"No input\" });\n\n  const trimmed = input.trim();\n  const local = localThreatCheck(trimmed);\n\n  let result = {\n    input: trimmed,\n    status: local.status,\n    stats: local.stats || null,\n    total_engines: local.total_engines || 0,\n    threatType: local.threatType,\n    detectedBy: Array.from(new Set(local.detectedBy || [])),\n    aiPrediction: null,\n  };\n\n  try {\n    const aiPromise = queryAI(trimmed);\n    let thirdParty = { status: \"Unknown\", detectedBy: [], threatType: \"Unknown\" };\n\n    if (isIP(trimmed)) thirdParty = await checkIP(trimmed);\n    else if (isURL(trimmed)) thirdParty = await checkVirusTotalURL(trimmed);\n    else if (isHash(trimmed)) thirdParty = await checkVirusTotalHash(trimmed);\n\n    if (thirdParty.status !== \"Unknown\") {\n      result.status = thirdParty.status;\n      result.threatType = thirdParty.threatType;\n      result.stats = thirdParty.stats || result.stats;\n      result.total_engines = thirdParty.total_engines || result.total_engines;\n      result.detectedBy = Array.from(new Set([...result.detectedBy, ...thirdParty.detectedBy]));\n    }\n\n    const aiPred = await aiPromise;\n    result.aiPrediction = aiPred;\n\n    if (thirdParty.status === \"Unknown\" || (isIP(trimmed) && thirdParty.score === 0)) {\n      const lower = aiPred.toLowerCase();\n      if (lower.includes(\"malware\")) {\n        result.status = \"üö® High Threat!\";\n        result.threatType = \"Malware\";\n      } else if (lower.includes(\"phish\") || lower.includes(\"suspicious\")) {\n        result.status = \"‚ö†Ô∏è Suspicious\";\n        result.threatType = \"Phishing\";\n      } else if (lower.includes(\"benign\") || lower.includes(\"safe\")) {\n        result.status = \"‚úÖ No Threat\";\n        result.threatType = \"Safe\";\n      } else {\n        result.status = \"Unknown\";\n        result.threatType = \"Unknown\";\n      }\n      result.detectedBy.push(\"AI Model\");\n    } else {\n      if (!result.detectedBy.includes(\"AI Model\")) result.detectedBy.push(\"AI Model\");\n    }\n\n    result.detectedBy = Array.from(new Set(result.detectedBy)).sort();\n\n    if (result.threatType && result.threatType !== \"Safe\" && result.threatType !== \"Unknown\") {\n      trainAI(trimmed, result.threatType).catch(() => {});\n    }\n\n    const saved = await Scan.create(result);\n    res.json(saved);\n  } catch (err) {\n    console.error(\"Scan error:\", err.message || err);\n    try {\n      const fallback = await Scan.create({ ...result, status: result.status || \"Unknown\" });\n      return res.status(200).json(fallback);\n    } catch {\n      return res.status(500).json({ message: \"Internal server error\" });\n    }\n  }\n});\n\n// -------------------- History --------------------\napp.get(\"/api/history\", authenticateToken, async (req, res) => {\n  try {\n    const history = await Scan.find({}).sort({ date: -1 }).limit(50);\n    res.json(history);\n  } catch {\n    res.status(500).json({ error: \"Internal server error\" });\n  }\n});\n\napp.delete(\"/api/history/:id\", authenticateToken, async (req, res) => {\n  try {\n    await Scan.findByIdAndDelete(req.params.id);\n    res.json({ message: \"Deleted\" });\n  } catch {\n    res.status(500).json({ error: \"Failed\" });\n  }\n});\n\napp.delete(\"/api/history\", authenticateToken, async (req, res) => {\n  try {\n    await Scan.deleteMany({});\n    res.json({ message: \"Cleared\" });\n  } catch {\n    res.status(500).json({ error: \"Failed\" });\n  }\n});\n\n// -------------------- Start --------------------\nconst PORT = process.env.PORT || 4000;\napp.listen(PORT, () => console.log(`üöÄ Server running on port ${PORT}`));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}